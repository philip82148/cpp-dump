[dump] false => false, 0 => 0, 0.0 => 0.000000, '0' => '0', (const char *)"0" => "0", string{"0"} => "0", string_view{"0"} => "0"
[dump] true => true, 3.14 => 3.140000, 159265 => 159265, "This is a test string" => "This is a test string"
[dump] "This contains newline\nhere." => 
`This contains newline
here.`,
       R"(This contains ".)" => `This contains ".`,
       R"(This contains `.)" => "This contains `."
[dump] "\n\n\n\n" => 
`



`
[dump] (vector<int>{3, 1, 4}) => [ ... ]
[dump] (vector<vector<int>>{{3}, {1, 4}, {1, 5, 9}}) => [ ... ]
[dump] (vector<vector<vector<int>>>{{}, {{2, 6}}, {{5}, {3}, {5}}}) => [ ... ]
[dump] (vector<int>{3, 1, 4}) => [ ... ], vec => [ ... ], (vector<vector<vector<int>>>{{{2, 4, 6, 7, 8, 9, 0, 1, 1, 1, 3, 45}}}) => [ ... ]
[dump] (vector<int>{2, 3}) => [ ... ], (vector<int>{3, 4}) => [ ... ], (vector<int>{2, 4, 4, 5, 6, 4, 5, 2, 4, 5, 3, 5, 6, 7, 5, 6, 6, 6, 7, 7, 8, 1}) => [ ... ]
[dump] (vector<int>{2, 3}) => [ ... ], (vector<int>{3, 4}) => [ ... ], (vector<vector<int>>{{2}, {4}, {4}, {5}, {6}}) => [ ... ]
[dump] (vector{make_pair(1, 9), make_pair(3, 4), make_pair(5, 7)}) => [ ... ]
[dump] c_style_array => [ ... ]
[dump] vec => [ ... ]
[dump] [ ... ]
[dump] [ ... ], [ ... ]
[dump] make_pair(8, 'a') => ( ... )
[dump] make_tuple( 9, "This is another string.", "This is another string.", "This is another string.", "This is another string.", 7.9 ) => ( ... )
[dump] (map<double, string>{{3.2, "This is a pen."}, {3.8, "I have an apple."}}) => { ... }
[dump] (unordered_map<int, int>{{4, 6}, {2, 6}, {4, 3}}) => { ... }
[dump] multimap1 => { ... }
[dump] unordered_multimap1 => { ... }
[dump] (set{"A", "p", "p", "l", "e", " ", "P", "e", "n"}) => { ... }
[dump] (unordered_set{3, 1, 4, 1, 5}) => { ... }
[dump] multiset1 => { ... }
[dump] unordered_multiset1 => { ... }
[dump] queue1 => std::queue{ ... }
[dump] priority_queue1 => std::priority_queue{ ... }
[dump] stack1 => std::stack{ ... }
[dump] int_ptr => *65
[dump] *int_ptr => 65
[dump] void_ptr => 0x7ffd06586204, char_ptr => "A"
[dump] nullptr => nullptr
[dump] shared_ptr1 => *42, weak_ptr1 => *42, unique_ptr1 => *42, c => *42
[dump] shared_ptr1 => *3, weak_ptr1 => nullptr, unique_ptr1 => *42
[dump] class_a1 => decltype(class_a1){ ... }
[dump] class_b1 => class_b{ ... }
[dump] int_ptr => *65, enum_a_s => enum_a::s, enum_a_k => enum_a::k, enum_a_l => enum_a::?
[dump] bitset1 => 0b 00 1100 1010
[dump] optional => ?1
[dump] optional => std::nullopt
[dump] nullopt => std::nullopt
[dump] variant1 => |""
[dump] variant1 => |0
[dump] complex1 => 0.000000 - 1.000000i ( abs= 1.000000, arg/pi= -0.500000 )
[dump] complex2 => 10.000000 + 1.000000i ( abs= 10.049876, arg/pi= 0.031726 )
[dump] logic_error1 => std::logic_error{ what()= "This is a test error." }, original_error1 => { what()= "This is an original error." }
[dump] vec.begin() => *...
[dump] unsupported_enum => Unsupported Type
[dump] cpp_dump::es_style_t::no_es => cpp_dump::es_style_t::no_es, cpp_dump::es_style_t::by_syntax => cpp_dump::es_style_t::by_syntax, cpp_dump::es_value => cpp_dump::es_value_t{ ... }
[dump] array50 => [ ... ], map50 => { ... }, set50 => { ... }
[dump] array50 => [ ... ], map50 => { ... }, set50 => { ... }
