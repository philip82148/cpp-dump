[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_temp_args) => false
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_namespace) => false
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::max_width_20) => false
[dump] original_error1 => main(int, char**)::original_error{ what()= "This is an original error." }
[dump] ns::template_class<ns::template_class<int>>() => ns::template_class<ns::template_class<int> >{ member_var= 5, member_func()= "This is a member_func." }
[dump] long_name_original_class() => main(int, char**)::long_name_original_class{ member_var= 5, member_func()= "This is a member_func." }
[dump] original_enum::member1 => main(int, char**)::original_enum::member1, original_enum::member2 => main(int, char**)::original_enum::member2, 
       original_enum::member3 => main(int, char**)::original_enum::?
[dump] long_name_original_scoped_enum::member1 => main(int, char**)::long_name_original_scoped_enum::member1, 
       long_name_original_scoped_enum::member2 => main(int, char**)::long_name_original_scoped_enum::member2, 
       long_name_original_scoped_enum::member3 => main(int, char**)::long_name_original_scoped_enum::?

[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_temp_args) => true
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_namespace) => false
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::max_width_20) => false
[dump] original_error1 => main(int, char**)::original_error{ what()= "This is an original error." }
[dump] ns::template_class<ns::template_class<int>>() => ns::template_class{ member_var= 5, member_func()= "This is a member_func." }
[dump] long_name_original_class() => main(int, char**)::long_name_original_class{ member_var= 5, member_func()= "This is a member_func." }
[dump] original_enum::member1 => main(int, char**)::original_enum::member1, original_enum::member2 => main(int, char**)::original_enum::member2, 
       original_enum::member3 => main(int, char**)::original_enum::?
[dump] long_name_original_scoped_enum::member1 => main(int, char**)::long_name_original_scoped_enum::member1, 
       long_name_original_scoped_enum::member2 => main(int, char**)::long_name_original_scoped_enum::member2, 
       long_name_original_scoped_enum::member3 => main(int, char**)::long_name_original_scoped_enum::?

[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_temp_args) => false
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_namespace) => true
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::max_width_20) => false
[dump] original_error1 => original_error{ what()= "This is an original error." }
[dump] ns::template_class<ns::template_class<int>>() => template_class<template_class<int> >{ member_var= 5, member_func()= "This is a member_func." }
[dump] long_name_original_class() => long_name_original_class{ member_var= 5, member_func()= "This is a member_func." }
[dump] original_enum::member1 => original_enum::member1, original_enum::member2 => original_enum::member2, original_enum::member3 => original_enum::?
[dump] long_name_original_scoped_enum::member1 => long_name_original_scoped_enum::member1, 
       long_name_original_scoped_enum::member2 => long_name_original_scoped_enum::member2, 
       long_name_original_scoped_enum::member3 => long_name_original_scoped_enum::?

[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_temp_args) => true
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_namespace) => true
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::max_width_20) => false
[dump] original_error1 => original_error{ what()= "This is an original error." }
[dump] ns::template_class<ns::template_class<int>>() => template_class{ member_var= 5, member_func()= "This is a member_func." }
[dump] long_name_original_class() => long_name_original_class{ member_var= 5, member_func()= "This is a member_func." }
[dump] original_enum::member1 => original_enum::member1, original_enum::member2 => original_enum::member2, original_enum::member3 => original_enum::?
[dump] long_name_original_scoped_enum::member1 => long_name_original_scoped_enum::member1, 
       long_name_original_scoped_enum::member2 => long_name_original_scoped_enum::member2, 
       long_name_original_scoped_enum::member3 => long_name_original_scoped_enum::?

[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_temp_args) => false
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_namespace) => false
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::max_width_20) => true
[dump] original_error1 => main(int, char**)...{ what()= "This is an original error." }
[dump] ns::template_class<ns::template_class<int>>() => ns::template_clas...{ member_var= 5, member_func()= "This is a member_func." }
[dump] long_name_original_class() => main(int, char**)...{ member_var= 5, member_func()= "This is a member_func." }
[dump] original_enum::member1 => main(int, char**)...::member1, original_enum::member2 => main(int, char**)...::member2, 
       original_enum::member3 => main(int, char**)...::?
[dump] long_name_original_scoped_enum::member1 => main(int, char**)...::member1, long_name_original_scoped_enum::member2 => main(int, char**)...::member2, 
       long_name_original_scoped_enum::member3 => main(int, char**)...::?

[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_temp_args) => true
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_namespace) => false
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::max_width_20) => true
[dump] original_error1 => main(int, char**)...{ what()= "This is an original error." }
[dump] ns::template_class<ns::template_class<int>>() => ns::template_class{ member_var= 5, member_func()= "This is a member_func." }
[dump] long_name_original_class() => main(int, char**)...{ member_var= 5, member_func()= "This is a member_func." }
[dump] original_enum::member1 => main(int, char**)...::member1, original_enum::member2 => main(int, char**)...::member2, 
       original_enum::member3 => main(int, char**)...::?
[dump] long_name_original_scoped_enum::member1 => main(int, char**)...::member1, long_name_original_scoped_enum::member2 => main(int, char**)...::member2, 
       long_name_original_scoped_enum::member3 => main(int, char**)...::?

[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_temp_args) => false
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_namespace) => true
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::max_width_20) => true
[dump] original_error1 => original_error{ what()= "This is an original error." }
[dump] ns::template_class<ns::template_class<int>>() => template_class<te...{ member_var= 5, member_func()= "This is a member_func." }
[dump] long_name_original_class() => long_name_origina...{ member_var= 5, member_func()= "This is a member_func." }
[dump] original_enum::member1 => original_enum::member1, original_enum::member2 => original_enum::member2, original_enum::member3 => original_enum::?
[dump] long_name_original_scoped_enum::member1 => long_name_origina...::member1, long_name_original_scoped_enum::member2 => long_name_origina...::member2, 
       long_name_original_scoped_enum::member3 => long_name_origina...::?

[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_temp_args) => true
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::no_namespace) => true
[dump] bool(cp::options::class_name_format & cp::types::class_name_format_f::max_width_20) => true
[dump] original_error1 => original_error{ what()= "This is an original error." }
[dump] ns::template_class<ns::template_class<int>>() => template_class{ member_var= 5, member_func()= "This is a member_func." }
[dump] long_name_original_class() => long_name_origina...{ member_var= 5, member_func()= "This is a member_func." }
[dump] original_enum::member1 => original_enum::member1, original_enum::member2 => original_enum::member2, original_enum::member3 => original_enum::?
[dump] long_name_original_scoped_enum::member1 => long_name_origina...::member1, long_name_original_scoped_enum::member2 => long_name_origina...::member2, 
       long_name_original_scoped_enum::member3 => long_name_origina...::?

[dump] unsupported_original_class() => Unsupported Type
